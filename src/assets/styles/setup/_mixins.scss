/* Breakpoint mixins */

@mixin for-mobile-layout {
    @media (max-width: calc($mobile-breakpoint + 40px)) {
        @content;
    }
}

@mixin for-narrow-layout {
    @media (min-width: calc($mobile-breakpoint + 40px)) {
        @content;
    }
}

@mixin for-normal-layout {
    @media (min-width: calc($narrow-breakpoint + 40px)) {
        @content;
    }
}

@mixin for-wide-layout {
    @media (min-width: calc($normal-breakpoint + 40px)) {
        @content;
    }
}

/* Media  Mixins */
@mixin aspect-ratio($width, $height) {
    position: relative;
    overflow: hidden;

    &::before {
        display: block;
        content: "";
        width: 100%;
        padding-top: calc(($height / $width) * 100%);
    }

    >* {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
    }

    >img {
        height: 100%;
        object-fit: cover;
    }
}

// Mixin for removing hover efects on iphone screen
@mixin hover-supported {
    @media not all and (pointer: coarse) {
        &:hover {
            @content;
        }
    }
}

// Mixin for pulse colored side border
@mixin colored-border($type: none) {
    position: absolute;
    top: -1px;
    left: -6px;
    // z-index: 200;
    min-width: 6px;
    height: 36px;
    background-color: $clr-border;
    border: none;

    @if $type ==top {
        border-top-left-radius: 6px;
    }

    @if $type ==bottom {
        border-bottom-left-radius: 6px;
    }

    @else if $type ==collapse {
        border-bottom-left-radius: 6px;
        border-top-left-radius: 6px;
    }
}

// Mixin for border by given data
@mixin border($type: right, $width: 1px, $clr: $clr-border) {
    @if $type ==right {
        border-inline-end: $width solid $clr;
    }

    @else if $type ==left {
        border-inline-start: $width solid $clr;
    }

    @else if $type ==top {
        border-block-start: $width solid $clr;
    }

    @else if $type ==bottom {
        border-block-end: $width solid $clr;
    }

    @else if $type ==block {
        border: $width solid $clr;
        border-inline-start: none;
    }
}

// regular font
@mixin fontFigtree($size: 14px, $weight: 400, $line-height: 20px) {
    font-family: "Figtree", "Roboto", sans-serif;
    font-size: $size;
    line-height: $line-height;
    font-weight: $weight;
}

// group top area sticky:
@mixin stickyGroupTop($top: 129px, $zIdx: 10) {
    position: sticky;
    top: $top;
    background-color: $clr-table-bg;
    z-index: $zIdx;
}